/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package fragmentacion_vertical;

import java.awt.event.KeyAdapter;
import java.awt.event.KeyEvent;
import javax.swing.JOptionPane;

/**
 *
 * @author 706
 */
public class Inicio extends javax.swing.JFrame {
    Integer matUse[][] = new Integer[4][4];
    Integer matAcc[][] = new Integer[4][3];
    Fragmentacion proc = new Fragmentacion();
    /**
     * Creates new form Inicio
     */
    public Inicio() {
        initComponents();
        agregarValidaciones();
    }
    
    public void obtenerMatUse(){
        matUse[0][0] = Integer.parseInt(matUse1.getText());
        matUse[0][1] = Integer.parseInt(matUse2.getText());
        matUse[0][2] = Integer.parseInt(matUse3.getText());
        matUse[0][3] = Integer.parseInt(matUse4.getText());
        
        matUse[1][0] = Integer.parseInt(matUse5.getText());
        matUse[1][1] = Integer.parseInt(matUse6.getText());
        matUse[1][2] = Integer.parseInt(matUse7.getText());
        matUse[1][3] = Integer.parseInt(matUse8.getText());   
        
        matUse[2][0] = Integer.parseInt(matUse9.getText());
        matUse[2][1] = Integer.parseInt(matUse10.getText());
        matUse[2][2] = Integer.parseInt(matUse11.getText());
        matUse[2][3] = Integer.parseInt(matUse12.getText());

        matUse[3][0] = Integer.parseInt(matUse13.getText());
        matUse[3][1] = Integer.parseInt(matUse14.getText());
        matUse[3][2] = Integer.parseInt(matUse15.getText());
        matUse[3][3] = Integer.parseInt(matUse16.getText());        
    }
    public void obtenerMatAcc(){
        matAcc[0][0] = Integer.parseInt(matAcc1.getText());
        matAcc[0][1] = Integer.parseInt(matAcc2.getText());
        matAcc[0][2] = Integer.parseInt(matAcc3.getText());
        
        matAcc[1][0] = Integer.parseInt(matAcc4.getText());
        matAcc[1][1] = Integer.parseInt(matAcc5.getText());
        matAcc[1][2] = Integer.parseInt(matAcc6.getText());

        matAcc[2][0] = Integer.parseInt(matAcc7.getText());
        matAcc[2][1] = Integer.parseInt(matAcc8.getText());
        matAcc[2][2] = Integer.parseInt(matAcc9.getText());

        matAcc[3][0] = Integer.parseInt(matAcc10.getText());
        matAcc[3][1] = Integer.parseInt(matAcc11.getText());
        matAcc[3][2] = Integer.parseInt(matAcc12.getText());   
    }    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        matUse1 = new javax.swing.JTextField();
        matUse2 = new javax.swing.JTextField();
        matUse3 = new javax.swing.JTextField();
        matUse4 = new javax.swing.JTextField();
        matUse5 = new javax.swing.JTextField();
        matUse6 = new javax.swing.JTextField();
        matUse7 = new javax.swing.JTextField();
        matUse8 = new javax.swing.JTextField();
        matUse9 = new javax.swing.JTextField();
        matUse10 = new javax.swing.JTextField();
        matUse11 = new javax.swing.JTextField();
        matUse12 = new javax.swing.JTextField();
        matUse13 = new javax.swing.JTextField();
        matUse14 = new javax.swing.JTextField();
        matUse15 = new javax.swing.JTextField();
        matUse16 = new javax.swing.JTextField();
        matAcc1 = new javax.swing.JTextField();
        matAcc2 = new javax.swing.JTextField();
        matAcc3 = new javax.swing.JTextField();
        matAcc4 = new javax.swing.JTextField();
        matAcc5 = new javax.swing.JTextField();
        matAcc6 = new javax.swing.JTextField();
        matAcc7 = new javax.swing.JTextField();
        matAcc8 = new javax.swing.JTextField();
        matAcc9 = new javax.swing.JTextField();
        matAcc10 = new javax.swing.JTextField();
        matAcc11 = new javax.swing.JTextField();
        matAcc12 = new javax.swing.JTextField();
        btnIniciar = new javax.swing.JButton();
        matAA1 = new javax.swing.JTextField();
        matAA2 = new javax.swing.JTextField();
        matAA3 = new javax.swing.JTextField();
        matAA4 = new javax.swing.JTextField();
        matAA5 = new javax.swing.JTextField();
        matAA6 = new javax.swing.JTextField();
        matAA7 = new javax.swing.JTextField();
        matAA8 = new javax.swing.JTextField();
        matAA9 = new javax.swing.JTextField();
        matAA10 = new javax.swing.JTextField();
        matAA11 = new javax.swing.JTextField();
        matAA12 = new javax.swing.JTextField();
        matAA13 = new javax.swing.JTextField();
        matAA14 = new javax.swing.JTextField();
        matAA15 = new javax.swing.JTextField();
        matAA16 = new javax.swing.JTextField();
        jLabel15 = new javax.swing.JLabel();
        jLabel16 = new javax.swing.JLabel();
        jLabel17 = new javax.swing.JLabel();
        jLabel18 = new javax.swing.JLabel();
        jLabel19 = new javax.swing.JLabel();
        jLabel20 = new javax.swing.JLabel();
        jLabel21 = new javax.swing.JLabel();
        jLabel22 = new javax.swing.JLabel();
        jLabel23 = new javax.swing.JLabel();
        matCA1 = new javax.swing.JTextField();
        matCA2 = new javax.swing.JTextField();
        matCA3 = new javax.swing.JTextField();
        matCA4 = new javax.swing.JTextField();
        matCA5 = new javax.swing.JTextField();
        matCA6 = new javax.swing.JTextField();
        matCA7 = new javax.swing.JTextField();
        matCA8 = new javax.swing.JTextField();
        matCA9 = new javax.swing.JTextField();
        matCA10 = new javax.swing.JTextField();
        matCA11 = new javax.swing.JTextField();
        matCA12 = new javax.swing.JTextField();
        matCA13 = new javax.swing.JTextField();
        matCA14 = new javax.swing.JTextField();
        matCA15 = new javax.swing.JTextField();
        matCA16 = new javax.swing.JTextField();
        nomAOrd1 = new javax.swing.JLabel();
        nomAOrd2 = new javax.swing.JLabel();
        nomAOrd3 = new javax.swing.JLabel();
        nomAOrd4 = new javax.swing.JLabel();
        nomAOrd5 = new javax.swing.JLabel();
        nomAOrd6 = new javax.swing.JLabel();
        nomAOrd7 = new javax.swing.JLabel();
        nomAOrd8 = new javax.swing.JLabel();
        jLabel24 = new javax.swing.JLabel();
        imgP1 = new javax.swing.JLabel();
        imgP2 = new javax.swing.JLabel();
        imgP3 = new javax.swing.JLabel();
        fondo = new javax.swing.JLabel();
        jLabel25 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel1.setFont(new java.awt.Font("Verdana", 0, 12)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("Inserte los valores para las siguientes matrices de acuerdo al sitio.");
        getContentPane().add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(49, 39, -1, -1));

        jLabel2.setFont(new java.awt.Font("Verdana", 0, 12)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(255, 255, 255));
        jLabel2.setText("Matriz Access");
        getContentPane().add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(340, 90, -1, -1));

        jLabel3.setFont(new java.awt.Font("Verdana", 0, 12)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(255, 255, 255));
        jLabel3.setText("A1");
        getContentPane().add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 140, -1, -1));

        jLabel4.setFont(new java.awt.Font("Verdana", 0, 12)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(255, 255, 255));
        jLabel4.setText("Matriz Use");
        getContentPane().add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 90, -1, -1));

        jLabel5.setFont(new java.awt.Font("Verdana", 0, 12)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(255, 255, 255));
        jLabel5.setText("A2");
        getContentPane().add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 140, -1, -1));

        jLabel6.setFont(new java.awt.Font("Verdana", 0, 12)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(255, 255, 255));
        jLabel6.setText("A4");
        getContentPane().add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(220, 140, -1, -1));

        jLabel7.setFont(new java.awt.Font("Verdana", 0, 12)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(255, 255, 255));
        jLabel7.setText("A3");
        getContentPane().add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(170, 140, -1, -1));

        jLabel8.setFont(new java.awt.Font("Verdana", 0, 12)); // NOI18N
        jLabel8.setForeground(java.awt.Color.white);
        jLabel8.setText("q1");
        getContentPane().add(jLabel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 170, -1, -1));

        jLabel9.setFont(new java.awt.Font("Verdana", 0, 12)); // NOI18N
        jLabel9.setForeground(java.awt.Color.white);
        jLabel9.setText("q2");
        getContentPane().add(jLabel9, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 210, -1, -1));

        jLabel10.setFont(new java.awt.Font("Verdana", 0, 12)); // NOI18N
        jLabel10.setForeground(java.awt.Color.white);
        jLabel10.setText("q3");
        getContentPane().add(jLabel10, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 260, -1, -1));

        jLabel11.setFont(new java.awt.Font("Verdana", 0, 12)); // NOI18N
        jLabel11.setForeground(java.awt.Color.white);
        jLabel11.setText("q4");
        getContentPane().add(jLabel11, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 310, -1, -1));

        jLabel12.setFont(new java.awt.Font("Verdana", 0, 12)); // NOI18N
        jLabel12.setForeground(new java.awt.Color(255, 255, 255));
        jLabel12.setText("S1");
        getContentPane().add(jLabel12, new org.netbeans.lib.awtextra.AbsoluteConstraints(300, 140, -1, -1));

        jLabel13.setFont(new java.awt.Font("Verdana", 0, 12)); // NOI18N
        jLabel13.setForeground(new java.awt.Color(255, 255, 255));
        jLabel13.setText("S2");
        getContentPane().add(jLabel13, new org.netbeans.lib.awtextra.AbsoluteConstraints(370, 140, -1, -1));

        jLabel14.setFont(new java.awt.Font("Verdana", 0, 12)); // NOI18N
        jLabel14.setForeground(new java.awt.Color(255, 255, 255));
        jLabel14.setText("S3");
        getContentPane().add(jLabel14, new org.netbeans.lib.awtextra.AbsoluteConstraints(450, 140, -1, -1));

        matUse1.setFont(new java.awt.Font("Verdana", 0, 12)); // NOI18N
        matUse1.setForeground(new java.awt.Color(255, 255, 255));
        getContentPane().add(matUse1, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 160, 35, 28));

        matUse2.setFont(new java.awt.Font("Verdana", 0, 12)); // NOI18N
        matUse2.setForeground(new java.awt.Color(255, 255, 255));
        getContentPane().add(matUse2, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 160, 35, 28));

        matUse3.setFont(new java.awt.Font("Verdana", 0, 12)); // NOI18N
        matUse3.setForeground(new java.awt.Color(255, 255, 255));
        getContentPane().add(matUse3, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 160, 35, 28));

        matUse4.setFont(new java.awt.Font("Verdana", 0, 12)); // NOI18N
        matUse4.setForeground(new java.awt.Color(255, 255, 255));
        getContentPane().add(matUse4, new org.netbeans.lib.awtextra.AbsoluteConstraints(210, 160, 35, 28));

        matUse5.setFont(new java.awt.Font("Verdana", 0, 12)); // NOI18N
        getContentPane().add(matUse5, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 210, 35, 28));

        matUse6.setFont(new java.awt.Font("Verdana", 0, 12)); // NOI18N
        getContentPane().add(matUse6, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 210, 35, 28));

        matUse7.setFont(new java.awt.Font("Verdana", 0, 12)); // NOI18N
        getContentPane().add(matUse7, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 210, 35, 28));

        matUse8.setFont(new java.awt.Font("Verdana", 0, 12)); // NOI18N
        getContentPane().add(matUse8, new org.netbeans.lib.awtextra.AbsoluteConstraints(210, 210, 35, 28));

        matUse9.setFont(new java.awt.Font("Verdana", 0, 12)); // NOI18N
        getContentPane().add(matUse9, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 260, 35, 28));

        matUse10.setFont(new java.awt.Font("Verdana", 0, 12)); // NOI18N
        getContentPane().add(matUse10, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 260, 35, 28));

        matUse11.setFont(new java.awt.Font("Verdana", 0, 12)); // NOI18N
        getContentPane().add(matUse11, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 260, 35, 28));

        matUse12.setFont(new java.awt.Font("Verdana", 0, 12)); // NOI18N
        getContentPane().add(matUse12, new org.netbeans.lib.awtextra.AbsoluteConstraints(210, 260, 35, 28));

        matUse13.setFont(new java.awt.Font("Verdana", 0, 12)); // NOI18N
        getContentPane().add(matUse13, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 300, 35, 28));

        matUse14.setFont(new java.awt.Font("Verdana", 0, 12)); // NOI18N
        getContentPane().add(matUse14, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 300, 35, 28));

        matUse15.setFont(new java.awt.Font("Verdana", 0, 12)); // NOI18N
        getContentPane().add(matUse15, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 300, 35, 28));

        matUse16.setFont(new java.awt.Font("Verdana", 0, 12)); // NOI18N
        getContentPane().add(matUse16, new org.netbeans.lib.awtextra.AbsoluteConstraints(210, 300, 35, 28));

        matAcc1.setFont(new java.awt.Font("Verdana", 0, 12)); // NOI18N
        matAcc1.setForeground(new java.awt.Color(255, 255, 255));
        getContentPane().add(matAcc1, new org.netbeans.lib.awtextra.AbsoluteConstraints(280, 160, 60, 28));

        matAcc2.setFont(new java.awt.Font("Verdana", 0, 12)); // NOI18N
        matAcc2.setForeground(new java.awt.Color(255, 255, 255));
        getContentPane().add(matAcc2, new org.netbeans.lib.awtextra.AbsoluteConstraints(360, 160, 60, 28));

        matAcc3.setFont(new java.awt.Font("Verdana", 0, 12)); // NOI18N
        matAcc3.setForeground(new java.awt.Color(255, 255, 255));
        getContentPane().add(matAcc3, new org.netbeans.lib.awtextra.AbsoluteConstraints(440, 160, 60, 28));

        matAcc4.setFont(new java.awt.Font("Verdana", 0, 12)); // NOI18N
        getContentPane().add(matAcc4, new org.netbeans.lib.awtextra.AbsoluteConstraints(280, 210, 60, 28));

        matAcc5.setFont(new java.awt.Font("Verdana", 0, 12)); // NOI18N
        getContentPane().add(matAcc5, new org.netbeans.lib.awtextra.AbsoluteConstraints(360, 210, 60, 28));

        matAcc6.setFont(new java.awt.Font("Verdana", 0, 12)); // NOI18N
        getContentPane().add(matAcc6, new org.netbeans.lib.awtextra.AbsoluteConstraints(440, 210, 60, 28));

        matAcc7.setFont(new java.awt.Font("Verdana", 0, 12)); // NOI18N
        getContentPane().add(matAcc7, new org.netbeans.lib.awtextra.AbsoluteConstraints(280, 260, 60, 28));

        matAcc8.setFont(new java.awt.Font("Verdana", 0, 12)); // NOI18N
        getContentPane().add(matAcc8, new org.netbeans.lib.awtextra.AbsoluteConstraints(360, 260, 60, 28));

        matAcc9.setFont(new java.awt.Font("Verdana", 0, 12)); // NOI18N
        getContentPane().add(matAcc9, new org.netbeans.lib.awtextra.AbsoluteConstraints(440, 260, 60, 28));

        matAcc10.setFont(new java.awt.Font("Verdana", 0, 12)); // NOI18N
        getContentPane().add(matAcc10, new org.netbeans.lib.awtextra.AbsoluteConstraints(280, 300, 60, 28));

        matAcc11.setFont(new java.awt.Font("Verdana", 0, 12)); // NOI18N
        getContentPane().add(matAcc11, new org.netbeans.lib.awtextra.AbsoluteConstraints(360, 300, 60, 28));

        matAcc12.setFont(new java.awt.Font("Verdana", 0, 12)); // NOI18N
        getContentPane().add(matAcc12, new org.netbeans.lib.awtextra.AbsoluteConstraints(440, 300, 60, 28));

        btnIniciar.setFont(new java.awt.Font("Verdana", 0, 12)); // NOI18N
        btnIniciar.setText("Iniciar");
        btnIniciar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnIniciarActionPerformed(evt);
            }
        });
        getContentPane().add(btnIniciar, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 380, 94, 34));

        matAA1.setFont(new java.awt.Font("Verdana", 0, 12)); // NOI18N
        matAA1.setForeground(new java.awt.Color(255, 255, 255));
        matAA1.setDisabledTextColor(new java.awt.Color(0, 0, 0));
        matAA1.setEnabled(false);
        getContentPane().add(matAA1, new org.netbeans.lib.awtextra.AbsoluteConstraints(578, 160, 60, 28));

        matAA2.setFont(new java.awt.Font("Verdana", 0, 12)); // NOI18N
        matAA2.setDisabledTextColor(new java.awt.Color(0, 0, 0));
        matAA2.setEnabled(false);
        getContentPane().add(matAA2, new org.netbeans.lib.awtextra.AbsoluteConstraints(644, 160, 60, 28));

        matAA3.setFont(new java.awt.Font("Verdana", 0, 12)); // NOI18N
        matAA3.setDisabledTextColor(new java.awt.Color(0, 0, 0));
        matAA3.setEnabled(false);
        getContentPane().add(matAA3, new org.netbeans.lib.awtextra.AbsoluteConstraints(710, 160, 60, 28));

        matAA4.setFont(new java.awt.Font("Verdana", 0, 12)); // NOI18N
        matAA4.setDisabledTextColor(new java.awt.Color(0, 0, 0));
        matAA4.setEnabled(false);
        getContentPane().add(matAA4, new org.netbeans.lib.awtextra.AbsoluteConstraints(776, 160, 60, 28));

        matAA5.setFont(new java.awt.Font("Verdana", 0, 12)); // NOI18N
        matAA5.setDisabledTextColor(new java.awt.Color(0, 0, 0));
        matAA5.setEnabled(false);
        getContentPane().add(matAA5, new org.netbeans.lib.awtextra.AbsoluteConstraints(578, 206, 60, 28));

        matAA6.setFont(new java.awt.Font("Verdana", 0, 12)); // NOI18N
        matAA6.setDisabledTextColor(new java.awt.Color(0, 0, 0));
        matAA6.setEnabled(false);
        getContentPane().add(matAA6, new org.netbeans.lib.awtextra.AbsoluteConstraints(644, 206, 60, 28));

        matAA7.setFont(new java.awt.Font("Verdana", 0, 12)); // NOI18N
        matAA7.setDisabledTextColor(new java.awt.Color(0, 0, 0));
        matAA7.setEnabled(false);
        getContentPane().add(matAA7, new org.netbeans.lib.awtextra.AbsoluteConstraints(710, 206, 60, 28));

        matAA8.setFont(new java.awt.Font("Verdana", 0, 12)); // NOI18N
        matAA8.setDisabledTextColor(new java.awt.Color(0, 0, 0));
        matAA8.setEnabled(false);
        getContentPane().add(matAA8, new org.netbeans.lib.awtextra.AbsoluteConstraints(776, 206, 60, 28));

        matAA9.setFont(new java.awt.Font("Verdana", 0, 12)); // NOI18N
        matAA9.setDisabledTextColor(new java.awt.Color(0, 0, 0));
        matAA9.setEnabled(false);
        getContentPane().add(matAA9, new org.netbeans.lib.awtextra.AbsoluteConstraints(578, 253, 60, 28));

        matAA10.setFont(new java.awt.Font("Verdana", 0, 12)); // NOI18N
        matAA10.setDisabledTextColor(new java.awt.Color(0, 0, 0));
        matAA10.setEnabled(false);
        getContentPane().add(matAA10, new org.netbeans.lib.awtextra.AbsoluteConstraints(644, 253, 60, 28));

        matAA11.setFont(new java.awt.Font("Verdana", 0, 12)); // NOI18N
        matAA11.setDisabledTextColor(new java.awt.Color(0, 0, 0));
        matAA11.setEnabled(false);
        getContentPane().add(matAA11, new org.netbeans.lib.awtextra.AbsoluteConstraints(710, 253, 60, 28));

        matAA12.setFont(new java.awt.Font("Verdana", 0, 12)); // NOI18N
        matAA12.setDisabledTextColor(new java.awt.Color(0, 0, 0));
        matAA12.setEnabled(false);
        getContentPane().add(matAA12, new org.netbeans.lib.awtextra.AbsoluteConstraints(776, 253, 60, 28));

        matAA13.setFont(new java.awt.Font("Verdana", 0, 12)); // NOI18N
        matAA13.setDisabledTextColor(new java.awt.Color(0, 0, 0));
        matAA13.setEnabled(false);
        getContentPane().add(matAA13, new org.netbeans.lib.awtextra.AbsoluteConstraints(578, 299, 60, 28));

        matAA14.setFont(new java.awt.Font("Verdana", 0, 12)); // NOI18N
        matAA14.setDisabledTextColor(new java.awt.Color(0, 0, 0));
        matAA14.setEnabled(false);
        getContentPane().add(matAA14, new org.netbeans.lib.awtextra.AbsoluteConstraints(644, 299, 60, 28));

        matAA15.setFont(new java.awt.Font("Verdana", 0, 12)); // NOI18N
        matAA15.setDisabledTextColor(new java.awt.Color(0, 0, 0));
        matAA15.setEnabled(false);
        getContentPane().add(matAA15, new org.netbeans.lib.awtextra.AbsoluteConstraints(710, 299, 60, 28));

        matAA16.setFont(new java.awt.Font("Verdana", 0, 12)); // NOI18N
        matAA16.setDisabledTextColor(new java.awt.Color(0, 0, 0));
        matAA16.setEnabled(false);
        getContentPane().add(matAA16, new org.netbeans.lib.awtextra.AbsoluteConstraints(776, 299, 60, 28));

        jLabel15.setFont(new java.awt.Font("Verdana", 0, 12)); // NOI18N
        jLabel15.setForeground(new java.awt.Color(255, 255, 255));
        jLabel15.setText("Matriz AA");
        getContentPane().add(jLabel15, new org.netbeans.lib.awtextra.AbsoluteConstraints(646, 91, -1, -1));

        jLabel16.setFont(new java.awt.Font("Verdana", 0, 12)); // NOI18N
        jLabel16.setForeground(new java.awt.Color(255, 255, 255));
        jLabel16.setText("A4");
        getContentPane().add(jLabel16, new org.netbeans.lib.awtextra.AbsoluteConstraints(791, 135, -1, -1));

        jLabel17.setFont(new java.awt.Font("Verdana", 0, 12)); // NOI18N
        jLabel17.setForeground(new java.awt.Color(255, 255, 255));
        jLabel17.setText("A3");
        getContentPane().add(jLabel17, new org.netbeans.lib.awtextra.AbsoluteConstraints(724, 135, -1, -1));

        jLabel18.setFont(new java.awt.Font("Verdana", 0, 12)); // NOI18N
        jLabel18.setForeground(new java.awt.Color(255, 255, 255));
        jLabel18.setText("A2");
        getContentPane().add(jLabel18, new org.netbeans.lib.awtextra.AbsoluteConstraints(662, 135, -1, -1));

        jLabel19.setFont(new java.awt.Font("Verdana", 0, 12)); // NOI18N
        jLabel19.setForeground(new java.awt.Color(255, 255, 255));
        jLabel19.setText("A1");
        getContentPane().add(jLabel19, new org.netbeans.lib.awtextra.AbsoluteConstraints(596, 135, -1, -1));

        jLabel20.setFont(new java.awt.Font("Verdana", 0, 12)); // NOI18N
        jLabel20.setForeground(java.awt.Color.white);
        jLabel20.setText("A4");
        getContentPane().add(jLabel20, new org.netbeans.lib.awtextra.AbsoluteConstraints(558, 305, -1, -1));

        jLabel21.setFont(new java.awt.Font("Verdana", 0, 12)); // NOI18N
        jLabel21.setForeground(java.awt.Color.white);
        jLabel21.setText("A3");
        getContentPane().add(jLabel21, new org.netbeans.lib.awtextra.AbsoluteConstraints(558, 259, -1, -1));

        jLabel22.setFont(new java.awt.Font("Verdana", 0, 12)); // NOI18N
        jLabel22.setForeground(java.awt.Color.white);
        jLabel22.setText("A2");
        getContentPane().add(jLabel22, new org.netbeans.lib.awtextra.AbsoluteConstraints(558, 212, -1, -1));

        jLabel23.setFont(new java.awt.Font("Verdana", 0, 12)); // NOI18N
        jLabel23.setForeground(java.awt.Color.white);
        jLabel23.setText("A1");
        getContentPane().add(jLabel23, new org.netbeans.lib.awtextra.AbsoluteConstraints(558, 166, -1, -1));

        matCA1.setFont(new java.awt.Font("Verdana", 0, 12)); // NOI18N
        matCA1.setDisabledTextColor(new java.awt.Color(0, 0, 0));
        matCA1.setEnabled(false);
        getContentPane().add(matCA1, new org.netbeans.lib.awtextra.AbsoluteConstraints(570, 470, 60, 28));

        matCA2.setFont(new java.awt.Font("Verdana", 0, 12)); // NOI18N
        matCA2.setDisabledTextColor(new java.awt.Color(0, 0, 0));
        matCA2.setEnabled(false);
        getContentPane().add(matCA2, new org.netbeans.lib.awtextra.AbsoluteConstraints(640, 470, 60, 28));

        matCA3.setFont(new java.awt.Font("Verdana", 0, 12)); // NOI18N
        matCA3.setDisabledTextColor(new java.awt.Color(0, 0, 0));
        matCA3.setEnabled(false);
        getContentPane().add(matCA3, new org.netbeans.lib.awtextra.AbsoluteConstraints(710, 470, 60, 28));

        matCA4.setFont(new java.awt.Font("Verdana", 0, 12)); // NOI18N
        matCA4.setDisabledTextColor(new java.awt.Color(0, 0, 0));
        matCA4.setEnabled(false);
        getContentPane().add(matCA4, new org.netbeans.lib.awtextra.AbsoluteConstraints(780, 470, 60, 28));

        matCA5.setFont(new java.awt.Font("Verdana", 0, 12)); // NOI18N
        matCA5.setDisabledTextColor(new java.awt.Color(0, 0, 0));
        matCA5.setEnabled(false);
        getContentPane().add(matCA5, new org.netbeans.lib.awtextra.AbsoluteConstraints(570, 510, 60, 28));

        matCA6.setFont(new java.awt.Font("Verdana", 0, 12)); // NOI18N
        matCA6.setDisabledTextColor(new java.awt.Color(0, 0, 0));
        matCA6.setEnabled(false);
        getContentPane().add(matCA6, new org.netbeans.lib.awtextra.AbsoluteConstraints(640, 510, 60, 28));

        matCA7.setFont(new java.awt.Font("Verdana", 0, 12)); // NOI18N
        matCA7.setDisabledTextColor(new java.awt.Color(0, 0, 0));
        matCA7.setEnabled(false);
        getContentPane().add(matCA7, new org.netbeans.lib.awtextra.AbsoluteConstraints(710, 510, 60, 28));

        matCA8.setFont(new java.awt.Font("Verdana", 0, 12)); // NOI18N
        matCA8.setDisabledTextColor(new java.awt.Color(0, 0, 0));
        matCA8.setEnabled(false);
        getContentPane().add(matCA8, new org.netbeans.lib.awtextra.AbsoluteConstraints(780, 510, 60, 28));

        matCA9.setFont(new java.awt.Font("Verdana", 0, 12)); // NOI18N
        matCA9.setDisabledTextColor(new java.awt.Color(0, 0, 0));
        matCA9.setEnabled(false);
        getContentPane().add(matCA9, new org.netbeans.lib.awtextra.AbsoluteConstraints(570, 550, 60, 28));

        matCA10.setFont(new java.awt.Font("Verdana", 0, 12)); // NOI18N
        matCA10.setDisabledTextColor(new java.awt.Color(0, 0, 0));
        matCA10.setEnabled(false);
        getContentPane().add(matCA10, new org.netbeans.lib.awtextra.AbsoluteConstraints(640, 550, 60, 28));

        matCA11.setFont(new java.awt.Font("Verdana", 0, 12)); // NOI18N
        matCA11.setDisabledTextColor(new java.awt.Color(0, 0, 0));
        matCA11.setEnabled(false);
        getContentPane().add(matCA11, new org.netbeans.lib.awtextra.AbsoluteConstraints(710, 550, 60, 28));

        matCA12.setFont(new java.awt.Font("Verdana", 0, 12)); // NOI18N
        matCA12.setDisabledTextColor(new java.awt.Color(0, 0, 0));
        matCA12.setEnabled(false);
        getContentPane().add(matCA12, new org.netbeans.lib.awtextra.AbsoluteConstraints(780, 550, 60, 28));

        matCA13.setFont(new java.awt.Font("Verdana", 0, 12)); // NOI18N
        matCA13.setDisabledTextColor(new java.awt.Color(0, 0, 0));
        matCA13.setEnabled(false);
        getContentPane().add(matCA13, new org.netbeans.lib.awtextra.AbsoluteConstraints(570, 590, 60, 28));

        matCA14.setFont(new java.awt.Font("Verdana", 0, 12)); // NOI18N
        matCA14.setDisabledTextColor(new java.awt.Color(0, 0, 0));
        matCA14.setEnabled(false);
        getContentPane().add(matCA14, new org.netbeans.lib.awtextra.AbsoluteConstraints(640, 590, 60, 28));

        matCA15.setFont(new java.awt.Font("Verdana", 0, 12)); // NOI18N
        matCA15.setDisabledTextColor(new java.awt.Color(0, 0, 0));
        matCA15.setEnabled(false);
        getContentPane().add(matCA15, new org.netbeans.lib.awtextra.AbsoluteConstraints(710, 590, 60, 28));

        matCA16.setFont(new java.awt.Font("Verdana", 0, 12)); // NOI18N
        matCA16.setDisabledTextColor(new java.awt.Color(0, 0, 0));
        matCA16.setEnabled(false);
        getContentPane().add(matCA16, new org.netbeans.lib.awtextra.AbsoluteConstraints(780, 590, 60, 28));

        nomAOrd1.setFont(new java.awt.Font("Verdana", 0, 12)); // NOI18N
        nomAOrd1.setForeground(java.awt.Color.white);
        nomAOrd1.setText("Ax");
        getContentPane().add(nomAOrd1, new org.netbeans.lib.awtextra.AbsoluteConstraints(550, 460, -1, -1));
        nomAOrd1.getAccessibleContext().setAccessibleName("A");

        nomAOrd2.setFont(new java.awt.Font("Verdana", 0, 12)); // NOI18N
        nomAOrd2.setForeground(java.awt.Color.white);
        nomAOrd2.setText("Ax");
        getContentPane().add(nomAOrd2, new org.netbeans.lib.awtextra.AbsoluteConstraints(550, 510, -1, -1));

        nomAOrd3.setFont(new java.awt.Font("Verdana", 0, 12)); // NOI18N
        nomAOrd3.setForeground(java.awt.Color.white);
        nomAOrd3.setText("Ax");
        getContentPane().add(nomAOrd3, new org.netbeans.lib.awtextra.AbsoluteConstraints(550, 550, -1, -1));

        nomAOrd4.setFont(new java.awt.Font("Verdana", 0, 12)); // NOI18N
        nomAOrd4.setForeground(java.awt.Color.white);
        nomAOrd4.setText("Ax");
        getContentPane().add(nomAOrd4, new org.netbeans.lib.awtextra.AbsoluteConstraints(550, 600, -1, -1));

        nomAOrd5.setFont(new java.awt.Font("Verdana", 0, 12)); // NOI18N
        nomAOrd5.setForeground(new java.awt.Color(255, 255, 255));
        nomAOrd5.setText("Ax");
        getContentPane().add(nomAOrd5, new org.netbeans.lib.awtextra.AbsoluteConstraints(580, 450, 20, -1));

        nomAOrd6.setFont(new java.awt.Font("Verdana", 0, 12)); // NOI18N
        nomAOrd6.setForeground(new java.awt.Color(255, 255, 255));
        nomAOrd6.setText("Ax");
        getContentPane().add(nomAOrd6, new org.netbeans.lib.awtextra.AbsoluteConstraints(650, 450, 20, -1));

        nomAOrd7.setFont(new java.awt.Font("Verdana", 0, 12)); // NOI18N
        nomAOrd7.setForeground(new java.awt.Color(255, 255, 255));
        nomAOrd7.setText("Ax");
        getContentPane().add(nomAOrd7, new org.netbeans.lib.awtextra.AbsoluteConstraints(730, 450, 20, -1));

        nomAOrd8.setFont(new java.awt.Font("Verdana", 0, 12)); // NOI18N
        nomAOrd8.setForeground(new java.awt.Color(255, 255, 255));
        nomAOrd8.setText("Ax");
        getContentPane().add(nomAOrd8, new org.netbeans.lib.awtextra.AbsoluteConstraints(790, 450, 20, -1));

        jLabel24.setFont(new java.awt.Font("Verdana", 1, 13)); // NOI18N
        jLabel24.setForeground(new java.awt.Color(255, 255, 255));
        jLabel24.setText("Matriz CA");
        getContentPane().add(jLabel24, new org.netbeans.lib.awtextra.AbsoluteConstraints(670, 410, -1, -1));

        imgP1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/fragmentacion_vertical/punto.png"))); // NOI18N
        getContentPane().add(imgP1, new org.netbeans.lib.awtextra.AbsoluteConstraints(620, 490, 30, 20));

        imgP2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/fragmentacion_vertical/punto.png"))); // NOI18N
        getContentPane().add(imgP2, new org.netbeans.lib.awtextra.AbsoluteConstraints(690, 530, -1, -1));

        imgP3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/fragmentacion_vertical/punto.png"))); // NOI18N
        getContentPane().add(imgP3, new org.netbeans.lib.awtextra.AbsoluteConstraints(760, 570, 30, 30));
        getContentPane().add(fondo, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, -1, -1));

        jLabel25.setFont(new java.awt.Font("Verdana", 0, 12)); // NOI18N
        jLabel25.setForeground(new java.awt.Color(255, 255, 255));
        jLabel25.setIcon(new javax.swing.ImageIcon(getClass().getResource("/fragmentacion_vertical/back.jpg"))); // NOI18N
        jLabel25.setText(".");
        getContentPane().add(jLabel25, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, -1, -1));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnIniciarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnIniciarActionPerformed
        int errors = 0;
        /*try{
            obtenerMatUse();
        }catch(Exception e){
            JOptionPane.showMessageDialog(null,"Error: Debe llenar todos los campos de la matriz de Uso");
            errors++;
        }
        
        try{
            obtenerMatAcc();
        }catch(Exception e){
            JOptionPane.showMessageDialog(null,"Error: Debe llenar todos los campos de la matriz de Acceso");
            errors++;
        }*/      
        if(errors==0){
            //this.proc.setMatAcc(this.matAcc);
            //this.proc.setMatUse(matUse);
            //this.proc.cargarDatosPrueba();
            this.proc.realizarProceso();
            mostrarMatAA();
            mostrarMatCA();
            mostrarPuntoCorte();
        }

    }//GEN-LAST:event_btnIniciarActionPerformed
    public void mostrarMatAA(){
        
        matAA1.setText( ""+ this.proc.matAA[0][0]);
        matAA2.setText( ""+ this.proc.matAA[0][1]);
        matAA3.setText( ""+ this.proc.matAA[0][2]);
        matAA4.setText( ""+ this.proc.matAA[0][3]);
        
        matAA5.setText( ""+ this.proc.matAA[1][0]);
        matAA6.setText( ""+ this.proc.matAA[1][1]);
        matAA7.setText( ""+ this.proc.matAA[1][2]);
        matAA8.setText( ""+ this.proc.matAA[1][3]);
        
        matAA9.setText( ""+ this.proc.matAA[2][0]);
        matAA10.setText( ""+ this.proc.matAA[2][1]);
        matAA11.setText( ""+ this.proc.matAA[2][2]);
        matAA12.setText( ""+ this.proc.matAA[2][3]);    
        
        matAA13.setText( ""+ this.proc.matAA[3][0]);
        matAA14.setText( ""+ this.proc.matAA[3][1]);
        matAA15.setText( ""+ this.proc.matAA[3][2]);
        matAA16.setText( ""+ this.proc.matAA[3][3]);         
    }
    public void mostrarMatCA(){        
        this.proc.ordenarNombres();
        matCA1.setText( ""+ this.proc.matCA[0][0]);
        matCA2.setText( ""+ this.proc.matCA[0][1]);
        matCA3.setText( ""+ this.proc.matCA[0][2]);
        matCA4.setText( ""+ this.proc.matCA[0][3]);
        
        matCA5.setText( ""+ this.proc.matCA[1][0]);
        matCA6.setText( ""+ this.proc.matCA[1][1]);
        matCA7.setText( ""+ this.proc.matCA[1][2]);
        matCA8.setText( ""+ this.proc.matCA[1][3]);
        
        matCA9.setText( ""+ this.proc.matCA[2][0]);
        matCA10.setText( ""+ this.proc.matCA[2][1]);
        matCA11.setText( ""+ this.proc.matCA[2][2]);
        matCA12.setText( ""+ this.proc.matCA[2][3]);    
        
        matCA13.setText( ""+ this.proc.matCA[3][0]);
        matCA14.setText( ""+ this.proc.matCA[3][1]);
        matCA15.setText( ""+ this.proc.matCA[3][2]);
        matCA16.setText( ""+ this.proc.matCA[3][3]);   
        
        nomAOrd1.setText(this.proc.nombresAtriOr[3]);
        nomAOrd2.setText(this.proc.nombresAtriOr[0]);
        nomAOrd3.setText(this.proc.nombresAtriOr[1]);
        nomAOrd4.setText(this.proc.nombresAtriOr[2]);    
        
        nomAOrd5.setText(this.proc.nombresAtriOr[3]);
        nomAOrd6.setText(this.proc.nombresAtriOr[0]);
        nomAOrd7.setText(this.proc.nombresAtriOr[1]);
        nomAOrd8.setText(this.proc.nombresAtriOr[2]);          
    }    
    public void mostrarPuntoCorte(){
        if(this.proc.puntoDiv==1){
            imgP1.setVisible(true);
        }else if(this.proc.puntoDiv==2){
            imgP2.setVisible(true);
        }else{
            imgP3.setVisible(true);
        }            
    }
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Inicio.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Inicio.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Inicio.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Inicio.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Inicio().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnIniciar;
    private javax.swing.JLabel fondo;
    private javax.swing.JLabel imgP1;
    private javax.swing.JLabel imgP2;
    private javax.swing.JLabel imgP3;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JLabel jLabel23;
    private javax.swing.JLabel jLabel24;
    private javax.swing.JLabel jLabel25;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JTextField matAA1;
    private javax.swing.JTextField matAA10;
    private javax.swing.JTextField matAA11;
    private javax.swing.JTextField matAA12;
    private javax.swing.JTextField matAA13;
    private javax.swing.JTextField matAA14;
    private javax.swing.JTextField matAA15;
    private javax.swing.JTextField matAA16;
    private javax.swing.JTextField matAA2;
    private javax.swing.JTextField matAA3;
    private javax.swing.JTextField matAA4;
    private javax.swing.JTextField matAA5;
    private javax.swing.JTextField matAA6;
    private javax.swing.JTextField matAA7;
    private javax.swing.JTextField matAA8;
    private javax.swing.JTextField matAA9;
    private javax.swing.JTextField matAcc1;
    private javax.swing.JTextField matAcc10;
    private javax.swing.JTextField matAcc11;
    private javax.swing.JTextField matAcc12;
    private javax.swing.JTextField matAcc2;
    private javax.swing.JTextField matAcc3;
    private javax.swing.JTextField matAcc4;
    private javax.swing.JTextField matAcc5;
    private javax.swing.JTextField matAcc6;
    private javax.swing.JTextField matAcc7;
    private javax.swing.JTextField matAcc8;
    private javax.swing.JTextField matAcc9;
    private javax.swing.JTextField matCA1;
    private javax.swing.JTextField matCA10;
    private javax.swing.JTextField matCA11;
    private javax.swing.JTextField matCA12;
    private javax.swing.JTextField matCA13;
    private javax.swing.JTextField matCA14;
    private javax.swing.JTextField matCA15;
    private javax.swing.JTextField matCA16;
    private javax.swing.JTextField matCA2;
    private javax.swing.JTextField matCA3;
    private javax.swing.JTextField matCA4;
    private javax.swing.JTextField matCA5;
    private javax.swing.JTextField matCA6;
    private javax.swing.JTextField matCA7;
    private javax.swing.JTextField matCA8;
    private javax.swing.JTextField matCA9;
    private javax.swing.JTextField matUse1;
    private javax.swing.JTextField matUse10;
    private javax.swing.JTextField matUse11;
    private javax.swing.JTextField matUse12;
    private javax.swing.JTextField matUse13;
    private javax.swing.JTextField matUse14;
    private javax.swing.JTextField matUse15;
    private javax.swing.JTextField matUse16;
    private javax.swing.JTextField matUse2;
    private javax.swing.JTextField matUse3;
    private javax.swing.JTextField matUse4;
    private javax.swing.JTextField matUse5;
    private javax.swing.JTextField matUse6;
    private javax.swing.JTextField matUse7;
    private javax.swing.JTextField matUse8;
    private javax.swing.JTextField matUse9;
    private javax.swing.JLabel nomAOrd1;
    private javax.swing.JLabel nomAOrd2;
    private javax.swing.JLabel nomAOrd3;
    private javax.swing.JLabel nomAOrd4;
    private javax.swing.JLabel nomAOrd5;
    private javax.swing.JLabel nomAOrd6;
    private javax.swing.JLabel nomAOrd7;
    private javax.swing.JLabel nomAOrd8;
    // End of variables declaration//GEN-END:variables
public void agregarValidaciones(){
    imgP1.setVisible(false);
    imgP2.setVisible(false);
    imgP3.setVisible(false);
    matUse1.addKeyListener(new KeyAdapter() {
        public void keyTyped(KeyEvent e) {
        validarUnoCero(e);
        }
        });
    matUse2.addKeyListener(new KeyAdapter() {
        public void keyTyped(KeyEvent e) {
        validarUnoCero(e);
        }
        });    
    matUse3.addKeyListener(new KeyAdapter() {
        public void keyTyped(KeyEvent e) {
        validarUnoCero(e);
        }
        });
    matUse4.addKeyListener(new KeyAdapter() {
        public void keyTyped(KeyEvent e) {
        validarUnoCero(e);
        }
        });
    matUse5.addKeyListener(new KeyAdapter() {
        public void keyTyped(KeyEvent e) {
        validarUnoCero(e);
        }
        });
    matUse6.addKeyListener(new KeyAdapter() {
        public void keyTyped(KeyEvent e) {
        validarUnoCero(e);
        }
        });
    matUse7.addKeyListener(new KeyAdapter() {
        public void keyTyped(KeyEvent e) {
        validarUnoCero(e);
        }
        });
    matUse2.addKeyListener(new KeyAdapter() {
        public void keyTyped(KeyEvent e) {
        validarUnoCero(e);
        }
        });
    matUse2.addKeyListener(new KeyAdapter() {
        public void keyTyped(KeyEvent e) {
        validarUnoCero(e);
        }
        });
    matUse2.addKeyListener(new KeyAdapter() {
        public void keyTyped(KeyEvent e) {
        validarUnoCero(e);
        }
        });
    matUse8.addKeyListener(new KeyAdapter() {
        public void keyTyped(KeyEvent e) {
        validarUnoCero(e);
        }
        });
    matUse9.addKeyListener(new KeyAdapter() {
        public void keyTyped(KeyEvent e) {
        validarUnoCero(e);
        }
        });
    matUse10.addKeyListener(new KeyAdapter() {
        public void keyTyped(KeyEvent e) {
        validarUnoCero(e);
        }
        });    
    matUse11.addKeyListener(new KeyAdapter() {
        public void keyTyped(KeyEvent e) {
        validarUnoCero(e);
        }
        });
    matUse12.addKeyListener(new KeyAdapter() {
        public void keyTyped(KeyEvent e) {
        validarUnoCero(e);
        }
        });
    matUse13.addKeyListener(new KeyAdapter() {
        public void keyTyped(KeyEvent e) {
        validarUnoCero(e);
        }
        });
    matUse14.addKeyListener(new KeyAdapter() {
        public void keyTyped(KeyEvent e) {
        validarUnoCero(e);
        }
        });
    matUse15.addKeyListener(new KeyAdapter() {
        public void keyTyped(KeyEvent e) {
        validarUnoCero(e);
        }
        });
    matUse16.addKeyListener(new KeyAdapter() {
        public void keyTyped(KeyEvent e) {
        validarUnoCero(e);
        }
        });    
    
    matAcc1.addKeyListener(new KeyAdapter() {
        public void keyTyped(KeyEvent e) {
        validarEnteros(e);
        }
        });     
    matAcc2.addKeyListener(new KeyAdapter() {
        public void keyTyped(KeyEvent e) {
        validarEnteros(e);
        }
        });
    matAcc3.addKeyListener(new KeyAdapter() {
        public void keyTyped(KeyEvent e) {
        validarEnteros(e);
        }
        });
    matAcc4.addKeyListener(new KeyAdapter() {
        public void keyTyped(KeyEvent e) {
        validarEnteros(e);
        }
        });
    matAcc5.addKeyListener(new KeyAdapter() {
        public void keyTyped(KeyEvent e) {
        validarEnteros(e);
        }
        });
    matAcc6.addKeyListener(new KeyAdapter() {
        public void keyTyped(KeyEvent e) {
        validarEnteros(e);
        }
        });
    matAcc7.addKeyListener(new KeyAdapter() {
        public void keyTyped(KeyEvent e) {
        validarEnteros(e);
        }
        });
    matAcc8.addKeyListener(new KeyAdapter() {
        public void keyTyped(KeyEvent e) {
        validarEnteros(e);
        }
        });
    matAcc9.addKeyListener(new KeyAdapter() {
        public void keyTyped(KeyEvent e) {
        validarEnteros(e);
        }
        });
    matAcc10.addKeyListener(new KeyAdapter() {
        public void keyTyped(KeyEvent e) {
        validarEnteros(e);
        }
        });
    matAcc11.addKeyListener(new KeyAdapter() {
        public void keyTyped(KeyEvent e) {
        validarEnteros(e);
        }
        });
    matAcc12.addKeyListener(new KeyAdapter() {
        public void keyTyped(KeyEvent e) {
        validarEnteros(e);
        }
        });    
}

    public void validarUnoCero(KeyEvent e) {
        char c = e.getKeyChar();
        if (!('1'==c||'0'==c)) {
        getToolkit().beep();
        e.consume();
        JOptionPane.showMessageDialog(null,"Error: La matriz de Uso solo acepta 0 y 1");
        }
    }
    public void validarEnteros(KeyEvent e) {
        char c = e.getKeyChar();
        if (!(Character.isDigit(c) ||
        (c == KeyEvent.VK_BACK_SPACE) ||
        (c == KeyEvent.VK_DELETE))) {
        getToolkit().beep();
        e.consume();
        JOptionPane.showMessageDialog(null,"Error: La matriz de Acceso solo acepta numeros enteros");
        }
    }
}
